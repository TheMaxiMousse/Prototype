---
import { randint } from '../utils/random.js'
import '../styles/global.css'
import Icon from '../components/Icon.astro'

const { product_id } = Astro.props
const { product_name } = Astro.props
---

<Fragment>
    <div class="product-card" style=`background-image: url("product/${product_id}.png");`>
        <div class="product-card-content">
            <div class="product-card-actions">
                <!-- <button class="like-button">
                    <Icon icon={randint(0, 1) === 0 ? 'heart' : 'heart-filled'} />
                </button>
                <button class="add-to-cart-button">
                    <span><Icon icon="shopping-cart-plus" /></span>
                    <span style="display: none;"><Icon icon="check" /></span>
                </button> -->
            </div>
            <h1>{product_name}</h1>
        </div>
    </div>
</Fragment>

<style>
    button {
        background: none;
    }

    h1 {
        background-color: light-dark(rgb(255 255 255 / 0.2), rgb(0 0 0 / 0.2));
        border-radius: var(--border-radius-small);
        overflow: hidden;
        text-align: center;
        width: 100%;
    }

    .add-to-cart-button span:first-child,
    .add-to-cart-button span:last-child {
        opacity: 0;
    }

    .like-button {
        opacity: 0.1;
    }

    .product-card {
        background-size: cover;
        border-radius: var(--border-radius-small);
        cursor: pointer;
        display: flex;
        flex-direction: column;
        min-width: var(--card-size);
        height: var(--card-size);
        position: relative;
        overflow: hidden;
    }

    .product-card-actions {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

    .product-card-content {
        align-items: center;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
    }

    .product-card-content > h1 {
        padding: var(--spacing-small);
    }

    /* Pseudo-classes */

    button:hover {
        background: none;
    }

    .like-button:hover {
        filter: drop-shadow(0 0 20px #f00);
    }

    .add-to-cart-button:hover {
        filter: drop-shadow(0 0 20px light-dark(#fff, #000));
    }

    .product-card:hover .like-button,
    .product-card:hover .add-to-cart-button span:first-child {
        opacity: 1;
    }

    .product-card:hover h1 {
        background-color: light-dark(rgb(255 255 255 / 0.5), rgb(0 0 0 / 0.5));
        border-radius: 0;
    }

    @media screen and (width <= 850px) {
        h1 {
            font-size: 0.75rem;
        }
    }
</style>

<script type="module" is:inline>
    const header = document.querySelector('header')

    if (!window.cartButtonScriptLoaded) {
        window.cartButtonScriptLoaded = true

        document.addEventListener('DOMContentLoaded', () => {
            const itemCount = document.getElementById('item-count')

            document.addEventListener('click', (event) => {
                const cartButton = event.target.closest('.add-to-cart-button')
                if (!cartButton) return
                header.classList.add('show')

                itemCount.textContent = Number(itemCount.textContent) + 1
                animateProductCardCart(cartButton)

                setTimeout(() => {
                    animateHeaderCart()
                }, 1000)
            })
        })
    }

    // Function to handle the cart button animation
    function animateProductCardCart(cartButton) {
        const cartIcon = cartButton.querySelector('span:first-child')
        const checkIcon = cartButton.querySelector('span:last-child')

        cartIcon.style.display = 'none'
        checkIcon.style.opacity = 1
        checkIcon.style.display = 'flex'

        let timeout = 2000

        setTimeout(() => {
            checkIcon.style.opacity = 0
        }, timeout + 250)

        setTimeout(() => {
            checkIcon.style.display = 'none'
            cartIcon.style.display = 'flex'
        }, timeout + 500)
    }

    // Function to handle the cart animation
    function animateHeaderCart() {
        const headerCartButton = document.getElementById('header-cart')
        headerCartButton.classList.add('tada')

        setTimeout(() => {
            headerCartButton.classList.remove('tada')
        }, 1500)
    }
</script>
